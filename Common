 public void setFixedConfigurationDetails(SaveFileConfigurationRequest saveFileConfigurationRequest) {
    logger.info("setFixedConfigurationDetails  method begin");
    List<FixedConfiguration> fixedConfigurationList = new ArrayList<>();
    for (FixedConfiguration fixedConfiguration : saveFileConfigurationRequest.getFixedConfigurations()) {
      if ((!fixedConfiguration.getFieldName().contains(ServiceConstants.OUTREF)) && StringUtils.hasText(fixedConfiguration.getFieldName()) &&StringUtils.hasText(fixedConfiguration.getFieldType()) && fixedConfiguration.getStartIndex() > 0 && fixedConfiguration.getEndIndex() > 0) {
        fixedConfiguration.setStartIndex(fixedConfiguration.getStartIndex() - 1);
        fixedConfiguration.setEndIndex(fixedConfiguration.getEndIndex() - 1);
        switch (fixedConfiguration.getFieldName()) {
          case ServiceConstants.ACCOUNT_NO -> {
            fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.DEBIT_ACCOUNT_NO, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), "D", fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
            fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.CREDIT_ACCOUNT_NO, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), "C", fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
          }
          case ServiceConstants.BRANCH_CODE_OR_IFSC_CODE -> {
              fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.DEBIT_BRANCH_CODE, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), "D", fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
              fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.CREDIT_BRANCH_CODE, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), "C", fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
          }
          case ServiceConstants.PURPOSE_OF_TRANSACTION ->
                  fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.DESCRIPTION, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), fixedConfiguration.getFieldType(), fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
          case ServiceConstants.PAYMENT_IDENTIFIER ->
                  fixedConfigurationList.add(new FixedConfiguration(ServiceConstants.NEW_PAYMENT_IDENTIFIER, fixedConfiguration.getDescription(), fixedConfiguration.isMandatory(), fixedConfiguration.getStartIndex(), fixedConfiguration.getEndIndex(), fixedConfiguration.getFieldType(), fixedConfiguration.getFieldAlias(), fixedConfiguration.getFieldInfo()));
          default -> fixedConfigurationList.add(fixedConfiguration);
        }
      } else if (fixedConfiguration.getFieldName().contains(ServiceConstants.OUTREF) && StringUtils.hasText(fixedConfiguration.getFieldType()) && StringUtils.hasText(fixedConfiguration.getFieldAlias()) && StringUtils.hasText(fixedConfiguration.getFieldName())
             && fixedConfiguration.getStartIndex() > 0 && fixedConfiguration.getEndIndex() > 0) {
        fixedConfigurationList.add(fixedConfiguration);
      } else {
        throw new ValidationException(StatusConstants.YBMFC001, "");
      }
    }
    saveFileConfigurationRequest.setFixedConfigurations(fixedConfigurationList);
    logger.info("setFixedConfigurationDetails  method end");
  }
