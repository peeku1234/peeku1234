public Map<String, String> getCorpDetails(String corpAlias) {
		logger.info("[APIBankingDAOImpl][validateCorpAlias()][Start]");
		String corpId = null;
		String isSaral = null;
		String active = null;
		Map<String, String> corpDetails = null;
		List<APIBankingEntity> aggCorpDetails = null;
		String fetchTranctionQuery = "select * from SBI_YB_APIBNKNG_CORP_MASTER where CORPORATE_ALIAS=:corporateAlias";
		try {
			MapSqlParameterSource params = new MapSqlParameterSource();
			params.addValue("corporateAlias", corpAlias);
			aggCorpDetails = namedParameterJdbcTemplate.query(fetchTranctionQuery, params,
                    new RowMapper<>() {
                      public APIBankingEntity mapRow(ResultSet rs, int rowNum) throws SQLException {
                        APIBankingEntity aggCorpData = new APIBankingEntity(rs.getString("CORPORATE_ID"),
                                FrameworkConstants.STRING_BLANK, rs.getString("CORPORATE_ALIAS"),
                                FrameworkConstants.STRING_BLANK, FrameworkConstants.STRING_BLANK, null,
                                FrameworkConstants.STRING_BLANK, rs.getString("ACTIVE"), rs.getString("IS_SARAL"));

                        return aggCorpData;
                      }
                    });
			if (aggCorpDetails.size() == 0) {
				logger.info("no record found for corpateId : {}", corpAlias);

			} else {
				corpId =  aggCorpDetails.get(0).corpId();
				isSaral = aggCorpDetails.get(0).isSaral();
				active = aggCorpDetails.get(0).active();
				corpDetails = new HashMap<>();
				corpDetails.put("corpId", corpId);
				corpDetails.put("isSaral", isSaral);
				corpDetails.put("active", active);
				logger.info("corpDetails--> : {}", corpDetails);
			}

		} catch (DataAccessException e) {
			logger.info("Exception while validateCorpAlias ::  " + corpAlias + "  " + e);

		} catch (Exception e) {
			logger.info("Exception while validateCorpAlias :: " + corpAlias + "  " + e);

		}
		logger.info("[APIBankingDAOImpl][validateCorpAlias()][ends]");
		return corpDetails;

	}
