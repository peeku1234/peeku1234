public Integer getEncryptedForCorporate(String corporateId, String configType) {
    logger.info("getEncryptedForCorporate(corporateId: {}, configType: {}) - begin", corporateId, configType);

    Integer value = null;
    Object[] params = new Object[]{corporateId, "S", configType, "4"};

    try {
        List<Map<String, Object>> valueList = getJdbcTemplate().queryForList(
            SQLConstants.GET_ENCRYPTED_FOR_CORPORATE, params
        );

        logger.info("Result: {}", valueList);

        if (valueList != null && !valueList.isEmpty()) {
            var valueMap = valueList.get(0);

            if (valueMap != null && valueMap.containsKey("ENCRYPTED") && valueMap.get("ENCRYPTED") != null) {
                value = Integer.valueOf(valueMap.get("ENCRYPTED").toString());
            }
        }
    } catch (DataAccessException e) {
        logger.error("Error occurred while fetching encrypted value for corporateId: {}, configType: {}", corporateId, configType, e);
        throw new DMOException(ErrorConstants.FATAL_EXCEPTION_ERROR_CODE, e);
    }

    logger.info("getEncryptedForCorporate(corporateId: {}, configType: {}) - end", corporateId, configType);
    return value;
}
