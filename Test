if (delimitedFileConfiguration.getFieldType().equalsIgnoreCase(ConfigurationConstants.DEBIT) || delimitedFileConfiguration.getFieldType().equalsIgnoreCase(ConfigurationConstants.BOTH)) {
          if (Integer.parseInt(delimitedFileConfiguration.getFieldLength()) > debitString.get(delimitedFileConfiguration.getOrderNo()).length()) {
            debitString.add(delimitedFileConfiguration.getOrderNo(), debitString.get(delimitedFileConfiguration.getOrderNo()).substring(0, debitString.get(delimitedFileConfiguration.getOrderNo()).length() - 1));
          } else {
            debitString.add(delimitedFileConfiguration.getOrderNo(), debitString.get(delimitedFileConfiguration.getOrderNo()).substring(0, Integer.parseInt(delimitedFileConfiguration.getFieldLength())));
          }

@Test
    void downloadSampleFile_CompositeBeneficiary_fieldTypeD() {
        sampleFileDownloadRequest.setFileType(ConfigurationConstants.COMPOSITE_BEN);
        delimitedConfiguration.setFieldType(ConfigurationConstants.BOTH);
//        delimitedConfiguration.setOrderNo(0);
//        delimitedConfiguration.setFieldLength("10");
        fileConfiguration1.add(delimitedConfiguration);
        fileConfiguration.setDelimitedConfiguration(fileConfiguration1);
        Mockito.when(sampleFileDownloadDaoimpl.getFileConfiguration(anyString(), anyString())).thenReturn(Collections.singletonList(fileConfiguration));
        Mockito.when(sampleFileDownloadDaoimpl.getDelimitedConfiguration(anyString(), anyString(), anyLong(), anyString())).thenReturn(fileConfiguration);
        FileDownloadResponse response = fileDownloadService.downloadSampleFile(sampleFileDownloadRequest);
        assertNotNull(response);

    }
