@Test
public void testGetFixedConfiguration_NoIndexChange_WhenFileTypeIsNotCompositeBen() {
    FileConfigurationEntity entity = new FileConfigurationEntity();
    entity.setId("250250");

    FixedConfiguration fixedConfig = new FixedConfiguration("Account Number", "AlphaNumeric", true, 10, 16, "8", null, null);
    List<FixedConfiguration> mockConfigs = List.of(fixedConfig);

    when(namedParameterJdbcTemplate.query(anyString(), any(MapSqlParameterSource.class), any(RowMapper.class)))
            .thenReturn(mockConfigs);

    List<FixedConfiguration> result = fileConfigurationDAOimpl.getFixedConfiguration("250250", "NON-BEN", entity);

    assertEquals(10, result.get(0).getStartIndex());
    assertEquals(16, result.get(0).getEndIndex());
}



@Test
public void testGetFixedConfiguration_AdjustsStartAndEndIndex_WhenFileTypeIsCompositeBen() {
    // Arrange
    FileConfigurationEntity fileConfigEntity = new FileConfigurationEntity();
    fileConfigEntity.setId("250250");
    fileConfigEntity.setFormat(1);
    fileConfigEntity.setDefaultConfig(true);
    fileConfigEntity.setOid("5966359893L");
    fileConfigEntity.setCompConfigType("any");
    fileConfigEntity.setLastConfigBy("test-user");
    fileConfigEntity.setFieldDelimiter(",");
    fileConfigEntity.setLastModTime("2025-05-30");

    // This config will be returned from the mocked DB call
    FixedConfiguration fixedConfig = new FixedConfiguration("Account Number", "AlphaNumeric", true, 10, 16, "8", null, null);
    List<FixedConfiguration> mockConfigs = List.of(fixedConfig);

    // Mock JDBC template response
    when(namedParameterJdbcTemplate.query(anyString(), any(MapSqlParameterSource.class), any(RowMapper.class)))
            .thenReturn(mockConfigs);

    // Act
    List<FixedConfiguration> result = fileConfigurationDAOimpl.getFixedConfiguration("250250", "COMPOSITE BEN", fileConfigEntity);

    // Assert
    assertNotNull(result);
    assertEquals(1, result.size());

    FixedConfiguration updatedConfig = result.get(0);
    assertEquals(9, updatedConfig.getStartIndex()); // 10 - 1
    assertEquals(15, updatedConfig.getEndIndex());  // 16 - 1
}
